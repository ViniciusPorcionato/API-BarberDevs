// <auto-generated />
using System;
using BarberDevs_API.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarberDevs_API.Migrations
{
    [DbContext(typeof(BarberDevsContext))]
    partial class BarberDevsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BarberDevs_API.Domains.Agendamento", b =>
                {
                    b.Property<Guid>("IdAgendamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAgendamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraAgendamento")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IdBarbeiro")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdAgendamento");

                    b.HasIndex("IdBarbeiro");

                    b.HasIndex("IdCliente");

                    b.ToTable("Agendamento");
                });

            modelBuilder.Entity("BarberDevs_API.Domains.Barbearia", b =>
                {
                    b.Property<Guid>("IdBarbearia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("CNPJ")
                        .HasColumnType("INT");

                    b.Property<int>("Cep")
                        .HasColumnType("INT");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("Numero")
                        .HasColumnType("INT");

                    b.HasKey("IdBarbearia");

                    b.ToTable("Barbearia");
                });

            modelBuilder.Entity("BarberDevs_API.Domains.Barbeiro", b =>
                {
                    b.Property<Guid>("IdBarbeiro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cpf")
                        .HasColumnType("INT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdBarbearia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rg")
                        .HasColumnType("INT");

                    b.Property<Guid?>("UsuarioBarbeiroIdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdBarbeiro");

                    b.HasIndex("IdBarbearia");

                    b.HasIndex("UsuarioBarbeiroIdUsuario");

                    b.ToTable("Barbeiro");
                });

            modelBuilder.Entity("BarberDevs_API.Domains.Cliente", b =>
                {
                    b.Property<Guid>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cpf")
                        .HasColumnType("INT");

                    b.Property<int>("Rg")
                        .HasColumnType("INT");

                    b.Property<Guid?>("UsuarioClienteIdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdCliente");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("Rg")
                        .IsUnique();

                    b.HasIndex("UsuarioClienteIdUsuario");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("BarberDevs_API.Domains.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CodRecupSenha")
                        .HasColumnType("INT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Foto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("BarberDevs_API.Domains.Agendamento", b =>
                {
                    b.HasOne("BarberDevs_API.Domains.Barbeiro", "Barbeiro")
                        .WithMany()
                        .HasForeignKey("IdBarbeiro");

                    b.HasOne("BarberDevs_API.Domains.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente");

                    b.Navigation("Barbeiro");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("BarberDevs_API.Domains.Barbeiro", b =>
                {
                    b.HasOne("BarberDevs_API.Domains.Barbearia", "Barbearia")
                        .WithMany()
                        .HasForeignKey("IdBarbearia");

                    b.HasOne("BarberDevs_API.Domains.Usuario", "UsuarioBarbeiro")
                        .WithMany()
                        .HasForeignKey("UsuarioBarbeiroIdUsuario");

                    b.Navigation("Barbearia");

                    b.Navigation("UsuarioBarbeiro");
                });

            modelBuilder.Entity("BarberDevs_API.Domains.Cliente", b =>
                {
                    b.HasOne("BarberDevs_API.Domains.Usuario", "UsuarioCliente")
                        .WithMany()
                        .HasForeignKey("UsuarioClienteIdUsuario");

                    b.Navigation("UsuarioCliente");
                });
#pragma warning restore 612, 618
        }
    }
}
